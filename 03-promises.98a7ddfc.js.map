{"mappings":"AAAAA,SAASC,iBAAiB,oBAAoB,WAC9C,IAAMC,EAAOF,SAASG,cAAc,SAgBpC,SAASC,EAAcC,EAAUC,GAC9B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC1B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACPH,EACDF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEnBA,E,IAvBTJ,EAAKD,iBAAiB,UAAU,SAAUa,GACvCA,EAAEC,iBAEF,IAAMC,EAAad,EAAKC,cAAc,uBAChCc,EAAYf,EAAKC,cAAc,sBAC/Be,EAAchB,EAAKC,cAAc,wBAEjCG,EAAQa,SAASH,EAAWI,OAC5BC,EAAOF,SAASF,EAAUG,QAmBnC,SAAwBE,EAAQC,EAAcF,GAC3C,IAAK,IAAIG,EAAI,EAAGA,EAAIF,EAAQE,IACzBpB,EAAcoB,EAAI,EAAGD,EAAeC,EAAIH,GACvCI,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAChBqB,QAAQC,IAAI,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAE5DwB,OAAM,SAAAJ,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBqB,QAAQC,IAAI,sBAAqCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAvB7DyB,CAFeZ,SAASD,EAAYE,OAEbd,EAAOe,E","sources":["src/js/03-promises.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function () {\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", function (e) {\n   e.preventDefault();\n   \n   const delayInput = form.querySelector('input[name=\"delay\"]');\n   const stepInput = form.querySelector('input[name=\"step\"]');\n   const amountInput = form.querySelector('input[name=\"amount\"]');\n   \n   const delay = parseInt(delayInput.value);\n   const step = parseInt(stepInput.value);\n   const amount = parseInt(amountInput.value);\n   \n   createPromises(amount, delay, step);\n});\n\nfunction createPromise(position, delay) {\n   return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n      if (shouldResolve) {\n         resolve({ position, delay });\n      } else {\n         reject({ position, delay });\n      }\n      }, delay);\n   });\n}\n\nfunction createPromises(amount, initialDelay, step) {\n   for (let i = 0; i < amount; i++) {\n      createPromise(i + 1, initialDelay + i * step)\n      .then(({ position, delay }) => {\n         console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n         console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n   }\n}\n});\n"],"names":["document","addEventListener","form","querySelector","createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","e","preventDefault","delayInput","stepInput","amountInput","parseInt","value","step","amount","initialDelay","i","then","param","console","log","concat","catch","createPromises"],"version":3,"file":"03-promises.98a7ddfc.js.map"}